{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Documents\\\\GitHub\\\\ValetProUser\\\\Client\\\\src\\\\components\\\\Scanner\\\\Scanner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\nimport \"./Scanner.css\";\n\nfunction Scanner({\n  setSubCar,\n  setScan\n}) {\n  _s();\n\n  const [data, setData] = React.useState(\"Scan...\");\n  const [torchOn, setTorchOn] = React.useState(false);\n  const [camErr, setCamErr] = React.useState(false);\n  useEffect(() => {\n    if (data !== \"Scan...\") {\n      const scan2 = {\n        ticket: data\n      };\n      const jso = JSON.stringify(scan2);\n      localStorage.setItem(\"scan\", jso);\n      setSubCar(true);\n      setScan(false);\n    }\n  }, [data]);\n\n  const handleScan = () => {\n    setScan(false);\n  };\n\n  const handleSwitch = () => {\n    setSubCar(true);\n    setScan(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backshadow3\",\n      onClick: handleScan,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-modal3\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scanbtn\",\n          onClick: () => setTorchOn(!torchOn),\n          children: [\"Switch Torch \", torchOn ? \"Off\" : \"On\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: camErr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scanbtn\",\n          onClick: handleSwitch,\n          children: \"Switch to Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(BarcodeScannerComponent, {\n          width: 500,\n          height: 500,\n          torch: torchOn,\n          onUpdate: (err, result) => {\n            if (result) setData(result.text);else setData(\"Scan...\");\n          },\n          onError: error => {\n            if (error) {\n              setCamErr(\"ERROR\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scanbtn\",\n          onClick: () => setTorchOn(!torchOn),\n          children: [\"Switch Torch \", torchOn ? \"Off\" : \"On\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"scanbtn\",\n            onClick: handleSwitch,\n            children: \"Switch to Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Scanner, \"DWt/yhZTfPVQaJLpc4CZA9ywqgk=\");\n\n_c = Scanner;\nexport default Scanner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"sources":["C:/Users/Chris/Documents/GitHub/ValetProUser/Client/src/components/Scanner/Scanner.js"],"names":["React","useEffect","BarcodeScannerComponent","Scanner","setSubCar","setScan","data","setData","useState","torchOn","setTorchOn","camErr","setCamErr","scan2","ticket","jso","JSON","stringify","localStorage","setItem","handleScan","handleSwitch","e","stopPropagation","err","result","text","error"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\r\nimport \"./Scanner.css\"\r\n\r\nfunction Scanner({setSubCar, setScan}) {\r\n  const [data, setData] = React.useState(\"Scan...\");\r\n  const [torchOn, setTorchOn] = React.useState(false);\r\n  const [camErr, setCamErr] = React.useState(false);\r\n\r\n\r\n  useEffect (() => {\r\n    if(data!==\"Scan...\"){\r\n      const scan2 = {ticket:data}\r\n    const jso = JSON.stringify(scan2);\r\n      localStorage.setItem(\"scan\", jso);\r\n    setSubCar(true)\r\n    setScan(false)\r\n    }\r\n    }, [data])\r\n\r\n  const handleScan = () => {\r\n    setScan(false)\r\n  }\r\n\r\n  const handleSwitch = () => {\r\n    setSubCar(true) \r\n    setScan(false)\r\n  }\r\n  return (\r\n    <>\r\n    <div className=\"backshadow3\" onClick={handleScan}>\r\n    <div className=\"custom-modal3\" onClick={(e) => e.stopPropagation()} >\r\n    \r\n    <button className=\"scanbtn\" onClick={() => setTorchOn(!torchOn)}>\r\n        Switch Torch {torchOn ? \"Off\" : \"On\"}\r\n      </button>\r\n      <p>{camErr}</p>\r\n      <button className=\"scanbtn\" onClick={handleSwitch}>Switch to Form</button>\r\n      \r\n      <BarcodeScannerComponent\r\n        width={500}\r\n        height={500}\r\n        torch={torchOn}\r\n        onUpdate={(err, result) => {\r\n          if (result) setData(result.text);\r\n          else setData(\"Scan...\");}}\r\n\r\n          onError={(error) => {\r\n            if (error){\r\n             setCamErr(\"ERROR\")\r\n            }\r\n            }}\r\n      />\r\n      <p>{data}</p>\r\n      <button className=\"scanbtn\" onClick={() => setTorchOn(!torchOn)}>\r\n        Switch Torch {torchOn ? \"Off\" : \"On\"}\r\n      </button>\r\n      <div >\r\n      <button className=\"scanbtn\" onClick={handleSwitch}>Switch to Form</button>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Scanner;"]},"metadata":{},"sourceType":"module"}