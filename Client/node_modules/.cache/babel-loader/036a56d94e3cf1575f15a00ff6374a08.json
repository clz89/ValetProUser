{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Documents\\\\GitHub\\\\ValetProUser\\\\Client\\\\src\\\\components\\\\List\\\\Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { batch, useDispatch, useSelector } from \"react-redux\";\nimport { deleteCar, createCar, updateCar } from \"../../_actions/subCars\";\nimport { createPull, deletePull, updatePull } from \"../../_actions/pulls\";\nimport { upForm } from \"../../_actions/updateForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"./Button\";\nimport { upReset } from \"../../_actions/updateForm\";\nimport { createOut, deleteOut } from \"../../_actions/outnr\";\nimport { createComp, deleteComp } from \"../../_actions/completed\";\nimport * as api from '../../_api';\n\nconst TableBody = ({\n  setFormT,\n  formT,\n  scan,\n  setScan,\n  sorted,\n  setSubCar,\n  list,\n  carlength,\n  on,\n  day,\n  posts,\n  setTableData,\n  tableData,\n  columns,\n  setPullId,\n  setModal,\n  vehicle,\n  setVehicle\n}) => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    tableData.filter(data => {\n      if (data.type === \"ON\" && !data.room && !data.hot) {\n        data.hot = \"Hot\";\n        dispatch(updateCar(data._id, data));\n        dispatch(updatePull(data._id, data));\n      } else if (data.type === \"ON\" && data.room && data.hot) {\n        data.hot = \"\";\n        dispatch(updateCar(data._id, data));\n        dispatch(updatePull(data._id, data));\n      }\n    });\n  });\n  useEffect(() => {\n    tableData.filter(data => {\n      if (list === \"cars\" && !data.complete && data.payment && data.price) {\n        data.complete = \"Complete\";\n        data.status = \"Paid\";\n        api.createPull(data);\n        dispatch(deleteCar(data._id));\n      } else if (list === \"pulls\" && !data.complete && data.payment && data.price) {\n        data.complete = \"Paid\";\n        data.status = \"Paid\";\n        const _id = data._id;\n        dispatch(updatePull(_id, data));\n      }\n    });\n  });\n\n  const handleUpdate = e => {\n    const evt = e.target.value;\n    tableData.filter(data => {\n      if (evt === data._id) {\n        dispatch(upForm(data));\n        setSubCar(true);\n      }\n    });\n  };\n\n  const handleComp = e => {\n    const evt = e.target.value;\n    tableData.filter(data => {\n      if (evt === data._id && data.status === \"Returning\") {\n        data.complete = \"Completed\";\n        dispatch(deletePull(data._id));\n        api.createOut(data);\n      } else if (evt === data._id && data.status !== \"Returning\") {\n        data.complete = \"Completed\";\n        dispatch(deletePull(data._id));\n        api.createComp(data);\n      }\n    });\n  };\n\n  const handleRepark = e => {\n    const evt = e.target.value;\n    tableData.filter(data => {\n      if (evt === data._id) {\n        data.payment = \"\";\n        data.complete = \"\";\n        data.status = \"repark\";\n        api.createCar(data);\n        setTableData([...sorted]);\n        dispatch(deletePull(data._id));\n        dispatch(deleteComp(data._id));\n        dispatch(deleteOut(data._id));\n      }\n    });\n  };\n\n  const handleModal = e => {\n    setModal(true);\n    setPullId(e.target.value);\n    const evt = e.target.value;\n    tableData.filter(data => {\n      if (evt === data._id) {\n        dispatch(upForm(data));\n      }\n    });\n  };\n\n  const handleOuts = e => {\n    const evt = e.target.value;\n    tableData.filter(data => {\n      if (evt === data._id) {\n        data.status = \"Checking Out\";\n        api.createComp(data);\n        dispatch(deleteOut(data._id));\n      }\n    });\n  };\n  /* mass delete if needed  \r\n      useEffect(()=>{\r\n      tableData.map((data) => {\r\n      dispatch(deletePull(data._id))  \r\n      dispatch(deleteCar(data._id))\r\n      dispatch(deleteComp(data._id)) \r\n      dispatch(deleteOut(data._id))\r\n    })})*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"search...\",\n          onChange: event => {\n            setSearchTerm(event.target.value);\n          },\n          value: searchTerm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"but searchbtn\",\n          onClick: () => setSearchTerm(\"\"),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [carlength, \"\\xA0cars\\xA0total\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"but\",\n          onClick: () => setScan(true),\n          children: \"Scanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: formT ? \"but btn-flash\" : \"but\",\n          onClick: () => setSubCar(true),\n          children: \"Add new car\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), tableData.filter(data => {\n      if (!on && !day) {\n        return data;\n      } else if (!on) {\n        var _data$type;\n\n        return (_data$type = data.type) === null || _data$type === void 0 ? void 0 : _data$type.includes(\"ON\");\n      } else if (!day) {\n        var _data$type2;\n\n        return (_data$type2 = data.type) === null || _data$type2 === void 0 ? void 0 : _data$type2.includes(\"DAY\");\n      }\n    }).filter(data => {\n      var _data$ticket, _data$name, _data$room, _data$vmake, _data$vmake2, _data$vcolor, _data$vmodel, _data$vehicle;\n\n      if (searchTerm === \"\") {\n        return data;\n      } else if ((_data$ticket = data.ticket) === null || _data$ticket === void 0 ? void 0 : _data$ticket.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return data;\n      } else if ((_data$name = data.name) === null || _data$name === void 0 ? void 0 : _data$name.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return data;\n      } else if ((_data$room = data.room) === null || _data$room === void 0 ? void 0 : _data$room.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return data;\n      } else if ((_data$vmake = data.vmake) === null || _data$vmake === void 0 ? void 0 : _data$vmake.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return data;\n      } else if ((_data$vmake2 = data.vmake) === null || _data$vmake2 === void 0 ? void 0 : _data$vmake2.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return data;\n      } else if ((_data$vcolor = data.vcolor) === null || _data$vcolor === void 0 ? void 0 : _data$vcolor.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return data;\n      } else if ((_data$vmodel = data.vmodel) === null || _data$vmodel === void 0 ? void 0 : _data$vmodel.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return data;\n      } else if ((_data$vehicle = data.vehicle) === null || _data$vehicle === void 0 ? void 0 : _data$vehicle.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return data;\n      }\n    }).map(data => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"listbtn\",\n          children: [!data.complete && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"but procbtn\",\n            value: data._id,\n            onClick: handleModal,\n            children: \"Process...\\xA0\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 23\n          }, this), list === \"pulls\" && data.complete && !data.hot && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"but\",\n            value: data._id,\n            onClick: handleComp,\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 23\n          }, this), list === \"pulls\" && data.complete && data.hot && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"but roombtn\",\n            value: data._id,\n            onClick: handleModal,\n            children: \"\\xA0+ Room\\xA0\\xA0\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 23\n          }, this), list === \"outs\" && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"but\",\n            value: data._id,\n            onClick: handleOuts,\n            children: \"Checkout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"but editbtn\",\n            type: \"button\",\n            value: data._id,\n            onClick: handleUpdate,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this), data.complete && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"but parkbtn\",\n            value: data._id,\n            onClick: handleRepark,\n            children: \"Repark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 23\n          }, this), data.status === \"process\" && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"but parkbtn\",\n            value: data._id,\n            onClick: handleRepark,\n            children: \"Repark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"but parkbtn\",\n            type: \"button\",\n            value: data._id,\n            onClick: () => dispatch(deletePull(data._id)) && dispatch(deleteCar(data._id)) && dispatch(deleteComp(data._id)) && dispatch(deleteOut(data._id)),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 19\n        }, this), columns.map(({\n          accessor\n        }) => {\n          const tData = data[accessor] ? data[accessor] : \"\";\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            className: data.hot ? \"hotlist\" : data.complete ? \"complist\" : data.type === \"DAY\" ? \"daylist\" : \"deflist\",\n            children: tData\n          }, accessor, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 28\n          }, this);\n        })]\n      }, data._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TableBody, \"xEqiu0uGh1ajyS7ezI3P0uiOiIc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TableBody;\nexport default TableBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableBody\");","map":{"version":3,"sources":["C:/Users/Chris/Documents/GitHub/ValetProUser/Client/src/components/List/Body.js"],"names":["React","useEffect","useState","batch","useDispatch","useSelector","deleteCar","createCar","updateCar","createPull","deletePull","updatePull","upForm","useNavigate","Button","upReset","createOut","deleteOut","createComp","deleteComp","api","TableBody","setFormT","formT","scan","setScan","sorted","setSubCar","list","carlength","on","day","posts","setTableData","tableData","columns","setPullId","setModal","vehicle","setVehicle","searchTerm","setSearchTerm","dispatch","filter","data","type","room","hot","_id","complete","payment","price","status","handleUpdate","e","evt","target","value","handleComp","handleRepark","handleModal","handleOuts","event","includes","ticket","toLowerCase","name","vmake","vcolor","vmodel","map","accessor","tData"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\r\nimport { batch, useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteCar, createCar, updateCar } from \"../../_actions/subCars\";\r\nimport { createPull, deletePull, updatePull } from \"../../_actions/pulls\";\r\nimport { upForm } from \"../../_actions/updateForm\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"./Button\";\r\nimport { upReset } from \"../../_actions/updateForm\";\r\nimport { createOut, deleteOut } from \"../../_actions/outnr\";\r\nimport { createComp, deleteComp } from \"../../_actions/completed\";\r\nimport * as api from '../../_api';\r\n\r\nconst TableBody = ({setFormT, formT, scan, setScan, sorted, setSubCar, list, carlength, on,\r\n   day, posts, setTableData, tableData, columns, setPullId, setModal, vehicle, setVehicle }) => {\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n     \r\n  \r\n    useEffect(() => {\r\n      tableData.filter((data) => {\r\n        if (data.type===\"ON\" && !data.room && !data.hot) {\r\n          data.hot=\"Hot\"\r\n          dispatch(updateCar(data._id, data))\r\n          dispatch(updatePull(data._id, data))\r\n        }      \r\n        else if(data.type===\"ON\" && data.room && data.hot) {\r\n          data.hot=\"\"\r\n          dispatch(updateCar(data._id, data))\r\n          dispatch(updatePull(data._id, data))\r\n        } \r\n      })\r\n    }) \r\n\r\n    useEffect(() => {\r\n      tableData.filter((data) => {\r\n        if (list===\"cars\" && !data.complete && data.payment && data.price  ) {  \r\n        data.complete=\"Complete\"\r\n        data.status=\"Paid\"\r\n        api.createPull(data)\r\n        dispatch(deleteCar(data._id))\r\n        } else if (list===\"pulls\" && !data.complete && data.payment && data.price  ) {  \r\n          data.complete=\"Paid\"\r\n          data.status=\"Paid\"\r\n          const _id = data._id\r\n       dispatch(updatePull(_id, data))\r\n          }\r\n      })\r\n    })\r\n\r\n    const handleUpdate = (e) => {\r\n      const evt = e.target.value\r\n      tableData.filter((data) => {\r\n        if (evt === data._id) {\r\n       dispatch(upForm(data));\r\n       setSubCar(true);\r\n      }\r\n      })}\r\n\r\n    const handleComp = (e) => {\r\n      const evt = e.target.value\r\n        tableData.filter((data) => {\r\n\r\n        if(evt===data._id && data.status===\"Returning\"){ \r\n          data.complete=\"Completed\"\r\n          dispatch(deletePull(data._id))      \r\n          api.createOut(data)\r\n\r\n          }else if(evt===data._id && data.status!==\"Returning\"){  \r\n           data.complete=\"Completed\"\r\n          dispatch(deletePull(data._id))        \r\n          api.createComp(data) \r\n          \r\n          }\r\n      })}\r\n      const handleRepark = (e) => {\r\n        const evt = e.target.value\r\n          tableData.filter((data) => {\r\n  \r\n          if(evt===data._id){ \r\n            data.payment=\"\"\r\n            data.complete=\"\"\r\n            data.status=\"repark\"\r\n            api.createCar(data)\r\n            setTableData([...sorted])\r\n\r\n            dispatch(deletePull(data._id))\r\n            dispatch(deleteComp(data._id))  \r\n            dispatch(deleteOut(data._id))     \r\n            }\r\n        })}\r\n\r\n        const handleModal = (e) => {\r\n          setModal(true);\r\n          setPullId(e.target.value)\r\n          const evt = e.target.value\r\n          tableData.filter((data) => {\r\n            if (evt === data._id) {\r\n            dispatch(upForm(data))}\r\n            \r\n          })}\r\n\r\n          const handleOuts = (e) => {\r\n            const evt = e.target.value\r\n              tableData.filter((data) => {\r\n              if(evt===data._id){ \r\n                data.status=\"Checking Out\"\r\n                api.createComp(data)\r\n                dispatch(deleteOut(data._id)) }    \r\n              })}\r\n\r\n        /* mass delete if needed  \r\n            useEffect(()=>{\r\n            tableData.map((data) => {\r\n            dispatch(deletePull(data._id))  \r\n            dispatch(deleteCar(data._id))\r\n            dispatch(deleteComp(data._id)) \r\n            dispatch(deleteOut(data._id))\r\n          })})*/\r\n\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n          <input type=\"text\" placeholder=\"search...\" onChange={(event) => {\r\n         setSearchTerm(event.target.value);}} value={searchTerm} />\r\n         <button className=\"but searchbtn\" onClick={()=>setSearchTerm(\"\")}>X</button>\r\n         </td>\r\n         <td>\r\n             {carlength}&nbsp;cars&nbsp;total\r\n            </td>\r\n            <td>\r\n              <button className=\"but\" onClick={()=>setScan(true)} >Scanner</button>\r\n              <button className={formT ? \"but btn-flash\" : \"but\"} onClick={()=>setSubCar(true)} >Add new car</button>\r\n            </td>\r\n            </tr>\r\n            {tableData.filter((data) => {\r\n            \r\n          \r\n            if (!on && !day) { return data; }\r\n            else if (!on) { return data.type?.includes(\"ON\"); }\r\n            else if (!day) { return data.type?.includes(\"DAY\"); }\r\n          })\r\n            .filter((data) => {\r\n              if (searchTerm === \"\") {\r\n                return data;\r\n            } else if (data.ticket?.toLowerCase().includes(searchTerm.toLowerCase())) { return data; }\r\n              else if (data.name?.toLowerCase().includes(searchTerm.toLowerCase())) { return data; }\r\n              else if (data.room?.toLowerCase().includes(searchTerm.toLowerCase())) { return data; }\r\n              else if (data.vmake?.toLowerCase().includes(searchTerm.toLowerCase()) )  { return data; }          \r\n              else if (data.vmake?.toLowerCase().includes(searchTerm.toLowerCase())) { return data; }\r\n              else if (data.vcolor?.toLowerCase().includes(searchTerm.toLowerCase())) { return data; }\r\n              else if (data.vmodel?.toLowerCase().includes(searchTerm.toLowerCase())) { return data; }\r\n              else if (data.vehicle?.toLowerCase().includes(searchTerm.toLowerCase())) { return data; }\r\n            })\r\n            .map((data) => {\r\n              return (\r\n                <tr  key={data._id}>\r\n\r\n                  <td className=\"listbtn\">\r\n\r\n                    {!data.complete && (\r\n                      <button className=\"but procbtn\" value={data._id}\r\n                        onClick={handleModal}>Process...&nbsp;&nbsp;&nbsp;</button>)}\r\n\r\n                    {list===\"pulls\" && data.complete && !data.hot &&(\r\n                      <button className=\"but\" value={data._id}\r\n                        onClick={handleComp}>Completed</button>\r\n                    )}\r\n\r\n                    {list===\"pulls\" && data.complete && data.hot &&(\r\n                      <button className=\"but roombtn\" value={data._id}\r\n                        onClick={handleModal}>&nbsp;+ Room&nbsp;&nbsp;&nbsp;&nbsp;</button>\r\n                    )}\r\n\r\n                    {list===\"outs\" && (\r\n                      <button className=\"but\" value={data._id}\r\n                        onClick={handleOuts} >Checkout</button>\r\n                    )}\r\n\r\n                    <button className=\"but editbtn\" type=\"button\"  value={data._id} onClick={handleUpdate}>Edit</button>\r\n                      {data.complete && (\r\n                      <button className=\"but parkbtn\" value={data._id}\r\n                        onClick={handleRepark}>Repark</button>\r\n                    )}\r\n\r\n                    {data.status===\"process\" && (\r\n                      <button className=\"but parkbtn\" value={data._id}\r\n                        onClick={handleRepark}>Repark</button>\r\n                    )}\r\n\r\n                    <button className=\"but parkbtn\" type=\"button\"  value={data._id} onClick={() => dispatch(deletePull(data._id)) && dispatch(deleteCar(data._id))\r\n                      && dispatch(deleteComp(data._id)) && dispatch(deleteOut(data._id))}>\r\n                   Delete</button>\r\n                  </td>\r\n\r\n                  {columns.map(({ accessor }) => {\r\n                    const tData = data[accessor] ? data[accessor] : \"\";                 \r\n                    return <td className={data.hot ? \"hotlist\" : data.complete ? \"complist\" : data.type===\"DAY\" ? \"daylist\" : \"deflist\" }  \r\n                    key={accessor}>{tData}</td>;}  \r\n                  )}\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>    \r\n            );\r\n  };\r\n  \r\n  export default TableBody;"]},"metadata":{},"sourceType":"module"}