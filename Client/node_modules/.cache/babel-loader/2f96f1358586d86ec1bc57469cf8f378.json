{"ast":null,"code":"\"use strict\";\n/*\r\n * Copyright 2013 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // package com.google.zxing.pdf417;\n\n/**\r\n * @author Guenther Grau\r\n */\n\nvar PDF417ResultMetadata =\n/** @class */\nfunction () {\n  function PDF417ResultMetadata() {\n    this.segmentCount = -1;\n    this.fileSize = -1;\n    this.timestamp = -1;\n    this.checksum = -1;\n  }\n  /**\r\n   * The Segment ID represents the segment of the whole file distributed over different symbols.\r\n   *\r\n   * @return File segment index\r\n   */\n\n\n  PDF417ResultMetadata.prototype.getSegmentIndex = function () {\n    return this.segmentIndex;\n  };\n\n  PDF417ResultMetadata.prototype.setSegmentIndex = function (segmentIndex) {\n    this.segmentIndex = segmentIndex;\n  };\n  /**\r\n   * Is the same for each related PDF417 symbol\r\n   *\r\n   * @return File ID\r\n   */\n\n\n  PDF417ResultMetadata.prototype.getFileId = function () {\n    return this.fileId;\n  };\n\n  PDF417ResultMetadata.prototype.setFileId = function (fileId) {\n    this.fileId = fileId;\n  };\n  /**\r\n   * @return always null\r\n   * @deprecated use dedicated already parsed fields\r\n   */\n  //   @Deprecated\n\n\n  PDF417ResultMetadata.prototype.getOptionalData = function () {\n    return this.optionalData;\n  };\n  /**\r\n   * @param optionalData old optional data format as int array\r\n   * @deprecated parse and use new fields\r\n   */\n  //   @Deprecated\n\n\n  PDF417ResultMetadata.prototype.setOptionalData = function (optionalData) {\n    this.optionalData = optionalData;\n  };\n  /**\r\n   * @return true if it is the last segment\r\n   */\n\n\n  PDF417ResultMetadata.prototype.isLastSegment = function () {\n    return this.lastSegment;\n  };\n\n  PDF417ResultMetadata.prototype.setLastSegment = function (lastSegment) {\n    this.lastSegment = lastSegment;\n  };\n  /**\r\n   * @return count of segments, -1 if not set\r\n   */\n\n\n  PDF417ResultMetadata.prototype.getSegmentCount = function () {\n    return this.segmentCount;\n  };\n\n  PDF417ResultMetadata.prototype.setSegmentCount = function (segmentCount\n  /*int*/\n  ) {\n    this.segmentCount = segmentCount;\n  };\n\n  PDF417ResultMetadata.prototype.getSender = function () {\n    return this.sender || null;\n  };\n\n  PDF417ResultMetadata.prototype.setSender = function (sender) {\n    this.sender = sender;\n  };\n\n  PDF417ResultMetadata.prototype.getAddressee = function () {\n    return this.addressee || null;\n  };\n\n  PDF417ResultMetadata.prototype.setAddressee = function (addressee) {\n    this.addressee = addressee;\n  };\n  /**\r\n   * Filename of the encoded file\r\n   *\r\n   * @return filename\r\n   */\n\n\n  PDF417ResultMetadata.prototype.getFileName = function () {\n    return this.fileName;\n  };\n\n  PDF417ResultMetadata.prototype.setFileName = function (fileName) {\n    this.fileName = fileName;\n  };\n  /**\r\n   * filesize in bytes of the encoded file\r\n   *\r\n   * @return filesize in bytes, -1 if not set\r\n   */\n\n\n  PDF417ResultMetadata.prototype.getFileSize = function () {\n    return this.fileSize;\n  };\n\n  PDF417ResultMetadata.prototype.setFileSize = function (fileSize\n  /*long*/\n  ) {\n    this.fileSize = fileSize;\n  };\n  /**\r\n   * 16-bit CRC checksum using CCITT-16\r\n   *\r\n   * @return crc checksum, -1 if not set\r\n   */\n\n\n  PDF417ResultMetadata.prototype.getChecksum = function () {\n    return this.checksum;\n  };\n\n  PDF417ResultMetadata.prototype.setChecksum = function (checksum\n  /*int*/\n  ) {\n    this.checksum = checksum;\n  };\n  /**\r\n   * unix epock timestamp, elapsed seconds since 1970-01-01\r\n   *\r\n   * @return elapsed seconds, -1 if not set\r\n   */\n\n\n  PDF417ResultMetadata.prototype.getTimestamp = function () {\n    return this.timestamp;\n  };\n\n  PDF417ResultMetadata.prototype.setTimestamp = function (timestamp\n  /*long*/\n  ) {\n    this.timestamp = timestamp;\n  };\n\n  return PDF417ResultMetadata;\n}();\n\nexports.default = PDF417ResultMetadata;","map":{"version":3,"sources":["../../../src/core/pdf417/PDF417ResultMetadata.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;IAEH;;AAEA;;AAEG;;AACH,IAAA,oBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,oBAAA,GAAA;AAKY,SAAA,YAAA,GAA+B,CAAC,CAAhC;AAIA,SAAA,QAAA,GAA4B,CAAC,CAA7B;AACA,SAAA,SAAA,GAA6B,CAAC,CAA9B;AACA,SAAA,QAAA,GAA2B,CAAC,CAA5B;AA0IX;AAvIG;;;;AAIG;;;AACI,EAAA,oBAAA,CAAA,SAAA,CAAA,eAAA,GAAP,YAAA;AACI,WAAO,KAAK,YAAZ;AACH,GAFM;;AAIA,EAAA,oBAAA,CAAA,SAAA,CAAA,eAAA,GAAP,UAAuB,YAAvB,EAAmD;AAC/C,SAAK,YAAL,GAAoB,YAApB;AACH,GAFM;AAIP;;;;AAIG;;;AACI,EAAA,oBAAA,CAAA,SAAA,CAAA,SAAA,GAAP,YAAA;AACI,WAAO,KAAK,MAAZ;AACH,GAFM;;AAIA,EAAA,oBAAA,CAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,MAAjB,EAA+B;AAC3B,SAAK,MAAL,GAAc,MAAd;AACH,GAFM;AAIP;;;AAGG;AACH;;;AACO,EAAA,oBAAA,CAAA,SAAA,CAAA,eAAA,GAAP,YAAA;AACI,WAAO,KAAK,YAAZ;AACH,GAFM;AAIP;;;AAGG;AACH;;;AACO,EAAA,oBAAA,CAAA,SAAA,CAAA,eAAA,GAAP,UAAuB,YAAvB,EAA+C;AAC3C,SAAK,YAAL,GAAoB,YAApB;AACH,GAFM;AAKP;;AAEG;;;AACI,EAAA,oBAAA,CAAA,SAAA,CAAA,aAAA,GAAP,YAAA;AACI,WAAO,KAAK,WAAZ;AACH,GAFM;;AAIA,EAAA,oBAAA,CAAA,SAAA,CAAA,cAAA,GAAP,UAAsB,WAAtB,EAA0C;AACtC,SAAK,WAAL,GAAmB,WAAnB;AACH,GAFM;AAIP;;AAEG;;;AACI,EAAA,oBAAA,CAAA,SAAA,CAAA,eAAA,GAAP,YAAA;AACI,WAAO,KAAK,YAAZ;AACH,GAFM;;AAIA,EAAA,oBAAA,CAAA,SAAA,CAAA,eAAA,GAAP,UAAuB;AAAqB;AAA5C,IAAmD;AAC/C,SAAK,YAAL,GAAoB,YAApB;AACH,GAFM;;AAIA,EAAA,oBAAA,CAAA,SAAA,CAAA,SAAA,GAAP,YAAA;AACI,WAAO,KAAK,MAAL,IAAe,IAAtB;AACH,GAFM;;AAIA,EAAA,oBAAA,CAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,MAAjB,EAA+B;AAC3B,SAAK,MAAL,GAAc,MAAd;AACH,GAFM;;AAIA,EAAA,oBAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACI,WAAO,KAAK,SAAL,IAAkB,IAAzB;AACH,GAFM;;AAIA,EAAA,oBAAA,CAAA,SAAA,CAAA,YAAA,GAAP,UAAoB,SAApB,EAAqC;AACjC,SAAK,SAAL,GAAiB,SAAjB;AACH,GAFM;AAIP;;;;AAIG;;;AACI,EAAA,oBAAA,CAAA,SAAA,CAAA,WAAA,GAAP,YAAA;AACI,WAAO,KAAK,QAAZ;AACH,GAFM;;AAIA,EAAA,oBAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,QAAnB,EAAmC;AAC/B,SAAK,QAAL,GAAgB,QAAhB;AACH,GAFM;AAIP;;;;AAIG;;;AACI,EAAA,oBAAA,CAAA,SAAA,CAAA,WAAA,GAAP,YAAA;AACI,WAAO,KAAK,QAAZ;AACH,GAFM;;AAIA,EAAA,oBAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB;AAAiB;AAApC,IAA4C;AACxC,SAAK,QAAL,GAAgB,QAAhB;AACH,GAFM;AAIP;;;;AAIG;;;AACI,EAAA,oBAAA,CAAA,SAAA,CAAA,WAAA,GAAP,YAAA;AACI,WAAO,KAAK,QAAZ;AACH,GAFM;;AAIA,EAAA,oBAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB;AAAgB;AAAnC,IAA0C;AACtC,SAAK,QAAL,GAAgB,QAAhB;AACH,GAFM;AAIP;;;;AAIG;;;AACI,EAAA,oBAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACI,WAAO,KAAK,SAAZ;AACH,GAFM;;AAIA,EAAA,oBAAA,CAAA,SAAA,CAAA,YAAA,GAAP,UAAoB;AAAkB;AAAtC,IAA8C;AAC1C,SAAK,SAAL,GAAiB,SAAjB;AACH,GAFM;;AAIX,SAAA,oBAAA;AAAC,CArJD,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\n/*\r\n * Copyright 2013 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// package com.google.zxing.pdf417;\r\n/**\r\n * @author Guenther Grau\r\n */\r\nvar PDF417ResultMetadata = /** @class */ (function () {\r\n    function PDF417ResultMetadata() {\r\n        this.segmentCount = -1;\r\n        this.fileSize = -1;\r\n        this.timestamp = -1;\r\n        this.checksum = -1;\r\n    }\r\n    /**\r\n     * The Segment ID represents the segment of the whole file distributed over different symbols.\r\n     *\r\n     * @return File segment index\r\n     */\r\n    PDF417ResultMetadata.prototype.getSegmentIndex = function () {\r\n        return this.segmentIndex;\r\n    };\r\n    PDF417ResultMetadata.prototype.setSegmentIndex = function (segmentIndex) {\r\n        this.segmentIndex = segmentIndex;\r\n    };\r\n    /**\r\n     * Is the same for each related PDF417 symbol\r\n     *\r\n     * @return File ID\r\n     */\r\n    PDF417ResultMetadata.prototype.getFileId = function () {\r\n        return this.fileId;\r\n    };\r\n    PDF417ResultMetadata.prototype.setFileId = function (fileId) {\r\n        this.fileId = fileId;\r\n    };\r\n    /**\r\n     * @return always null\r\n     * @deprecated use dedicated already parsed fields\r\n     */\r\n    //   @Deprecated\r\n    PDF417ResultMetadata.prototype.getOptionalData = function () {\r\n        return this.optionalData;\r\n    };\r\n    /**\r\n     * @param optionalData old optional data format as int array\r\n     * @deprecated parse and use new fields\r\n     */\r\n    //   @Deprecated\r\n    PDF417ResultMetadata.prototype.setOptionalData = function (optionalData) {\r\n        this.optionalData = optionalData;\r\n    };\r\n    /**\r\n     * @return true if it is the last segment\r\n     */\r\n    PDF417ResultMetadata.prototype.isLastSegment = function () {\r\n        return this.lastSegment;\r\n    };\r\n    PDF417ResultMetadata.prototype.setLastSegment = function (lastSegment) {\r\n        this.lastSegment = lastSegment;\r\n    };\r\n    /**\r\n     * @return count of segments, -1 if not set\r\n     */\r\n    PDF417ResultMetadata.prototype.getSegmentCount = function () {\r\n        return this.segmentCount;\r\n    };\r\n    PDF417ResultMetadata.prototype.setSegmentCount = function (segmentCount /*int*/) {\r\n        this.segmentCount = segmentCount;\r\n    };\r\n    PDF417ResultMetadata.prototype.getSender = function () {\r\n        return this.sender || null;\r\n    };\r\n    PDF417ResultMetadata.prototype.setSender = function (sender) {\r\n        this.sender = sender;\r\n    };\r\n    PDF417ResultMetadata.prototype.getAddressee = function () {\r\n        return this.addressee || null;\r\n    };\r\n    PDF417ResultMetadata.prototype.setAddressee = function (addressee) {\r\n        this.addressee = addressee;\r\n    };\r\n    /**\r\n     * Filename of the encoded file\r\n     *\r\n     * @return filename\r\n     */\r\n    PDF417ResultMetadata.prototype.getFileName = function () {\r\n        return this.fileName;\r\n    };\r\n    PDF417ResultMetadata.prototype.setFileName = function (fileName) {\r\n        this.fileName = fileName;\r\n    };\r\n    /**\r\n     * filesize in bytes of the encoded file\r\n     *\r\n     * @return filesize in bytes, -1 if not set\r\n     */\r\n    PDF417ResultMetadata.prototype.getFileSize = function () {\r\n        return this.fileSize;\r\n    };\r\n    PDF417ResultMetadata.prototype.setFileSize = function (fileSize /*long*/) {\r\n        this.fileSize = fileSize;\r\n    };\r\n    /**\r\n     * 16-bit CRC checksum using CCITT-16\r\n     *\r\n     * @return crc checksum, -1 if not set\r\n     */\r\n    PDF417ResultMetadata.prototype.getChecksum = function () {\r\n        return this.checksum;\r\n    };\r\n    PDF417ResultMetadata.prototype.setChecksum = function (checksum /*int*/) {\r\n        this.checksum = checksum;\r\n    };\r\n    /**\r\n     * unix epock timestamp, elapsed seconds since 1970-01-01\r\n     *\r\n     * @return elapsed seconds, -1 if not set\r\n     */\r\n    PDF417ResultMetadata.prototype.getTimestamp = function () {\r\n        return this.timestamp;\r\n    };\r\n    PDF417ResultMetadata.prototype.setTimestamp = function (timestamp /*long*/) {\r\n        this.timestamp = timestamp;\r\n    };\r\n    return PDF417ResultMetadata;\r\n}());\r\nexports.default = PDF417ResultMetadata;\r\n//# sourceMappingURL=PDF417ResultMetadata.js.map"]},"metadata":{},"sourceType":"script"}