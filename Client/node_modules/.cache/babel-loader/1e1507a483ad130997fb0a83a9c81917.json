{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BrowserCodeReader_1 = require(\"./BrowserCodeReader\");\n\nvar MultiFormatOneDReader_1 = require(\"../core/oned/MultiFormatOneDReader\");\n/**\r\n * @deprecated Moving to @zxing/browser\r\n *\r\n * Barcode reader reader to use from browser.\r\n */\n\n\nvar BrowserBarcodeReader =\n/** @class */\nfunction (_super) {\n  __extends(BrowserBarcodeReader, _super);\n  /**\r\n   * Creates an instance of BrowserBarcodeReader.\r\n   * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\r\n   * @param {Map<DecodeHintType, any>} hints\r\n   */\n\n\n  function BrowserBarcodeReader(timeBetweenScansMillis, hints) {\n    if (timeBetweenScansMillis === void 0) {\n      timeBetweenScansMillis = 500;\n    }\n\n    return _super.call(this, new MultiFormatOneDReader_1.default(hints), timeBetweenScansMillis, hints) || this;\n  }\n\n  return BrowserBarcodeReader;\n}(BrowserCodeReader_1.BrowserCodeReader);\n\nexports.BrowserBarcodeReader = BrowserBarcodeReader;","map":{"version":3,"sources":["../../src/browser/BrowserBarcodeReader.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,oCAAA,CAAA;AAGA;;;;AAIG;;;AACH,IAAA,oBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0C,EAAA,SAAA,CAAA,oBAAA,EAAA,MAAA,CAAA;AACtC;;;;AAIG;;;AACH,WAAA,oBAAA,CAAmB,sBAAnB,EAAyD,KAAzD,EAAyF;AAAtE,QAAA,sBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,sBAAA,GAAA,GAAA;AAAoC;;WACnD,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAI,uBAAA,CAAA,OAAJ,CAA0B,KAA1B,CAAN,EAAwC,sBAAxC,EAAgE,KAAhE,KAAsE,I;AACzE;;AACL,SAAA,oBAAA;AAAC,CATD,CAA0C,mBAAA,CAAA,iBAA1C,CAAA;;AAAa,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BrowserCodeReader_1 = require(\"./BrowserCodeReader\");\r\nvar MultiFormatOneDReader_1 = require(\"../core/oned/MultiFormatOneDReader\");\r\n/**\r\n * @deprecated Moving to @zxing/browser\r\n *\r\n * Barcode reader reader to use from browser.\r\n */\r\nvar BrowserBarcodeReader = /** @class */ (function (_super) {\r\n    __extends(BrowserBarcodeReader, _super);\r\n    /**\r\n     * Creates an instance of BrowserBarcodeReader.\r\n     * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\r\n     * @param {Map<DecodeHintType, any>} hints\r\n     */\r\n    function BrowserBarcodeReader(timeBetweenScansMillis, hints) {\r\n        if (timeBetweenScansMillis === void 0) { timeBetweenScansMillis = 500; }\r\n        return _super.call(this, new MultiFormatOneDReader_1.default(hints), timeBetweenScansMillis, hints) || this;\r\n    }\r\n    return BrowserBarcodeReader;\r\n}(BrowserCodeReader_1.BrowserCodeReader));\r\nexports.BrowserBarcodeReader = BrowserBarcodeReader;\r\n//# sourceMappingURL=BrowserBarcodeReader.js.map"]},"metadata":{},"sourceType":"script"}