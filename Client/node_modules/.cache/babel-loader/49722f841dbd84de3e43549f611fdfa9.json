{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Documents\\\\GitHub\\\\ValetProUser\\\\Client\\\\src\\\\components\\\\List\\\\Head.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst TableHead = ({\n  states,\n  on,\n  day,\n  setDay,\n  setOn,\n  columns,\n  tableData,\n  setTableData\n}) => {\n  _s();\n\n  const [sortField, setSortField] = useState(states.accessor);\n  const [order, setOrder] = useState(states.sortOrder);\n\n  const handleSorting = (sortField, sortOrder) => {\n    if (sortField) {\n      const sorted = [...tableData].sort((a, b) => {\n        var _a$sortField, _b$sortField;\n\n        if (a[sortField] === null) return 1;\n        if (b[sortField] === null) return -1;\n        if (a[sortField] === null && b[sortField] === null) return 0;\n        return ((_a$sortField = a[sortField]) === null || _a$sortField === void 0 ? void 0 : _a$sortField.toString().localeCompare((_b$sortField = b[sortField]) === null || _b$sortField === void 0 ? void 0 : _b$sortField.toString(), \"en\", {\n          numeric: true\n        })) * (sortOrder === \"asc\" ? 1 : -1);\n      });\n      setTableData(sorted);\n    }\n  };\n\n  const handleType = event => {\n    if (event.target.checked) {\n      setOn(false);\n      console.log('✅ Checkbox is checked');\n    } else {\n      setOn(true);\n      console.log('⛔️ Checkbox is NOT checked');\n    }\n\n    console.log(on);\n  };\n\n  const handleType2 = event => {\n    if (event.target.checked) {\n      setDay(false);\n      console.log('✅ Checkbox is checked');\n    } else {\n      setDay(true);\n      console.log('⛔️ Checkbox is NOT checked');\n    }\n\n    console.log(day);\n  };\n\n  const handleSortingChange = accessor => {\n    const sortOrder = accessor === sortField && order === \"asc\" ? \"desc\" : \"asc\";\n    setSortField(accessor);\n    setOrder(sortOrder);\n    handleSorting(accessor, sortOrder);\n    const states2 = {\n      accessor,\n      sortOrder\n    };\n    const jso = JSON.stringify(states2);\n    localStorage.setItem(\"states2\", jso);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"tdfilter\",\n        children: [\"Overnight!\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"Overnight\",\n          defaultChecked: \"true\",\n          type: \"checkbox\",\n          onChange: handleType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), \"\\xA0\\xA0Day use!\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultChecked: \"true\",\n          name: \"Day\",\n          onChange: handleType2,\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), columns.map(({\n        label,\n        accessor,\n        sortable\n      }) => {\n        const cl = sortable ? sortField && sortField === accessor && order === \"asc\" ? \"up\" : sortField && sortField === accessor && order === \"desc\" ? \"down\" : \"default\" : \"\";\n        return /*#__PURE__*/_jsxDEV(\"th\", {\n          className: cl,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"but\",\n            onClick: sortable ? () => handleSortingChange(accessor) : null,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 14\n          }, this)\n        }, accessor, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableHead, \"TY1utcBXcoZP6aM/KDzkebXGPrI=\");\n\n_c = TableHead;\nexport default TableHead;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableHead\");","map":{"version":3,"sources":["C:/Users/Chris/Documents/GitHub/ValetProUser/Client/src/components/List/Head.js"],"names":["useState","useEffect","TableHead","states","on","day","setDay","setOn","columns","tableData","setTableData","sortField","setSortField","accessor","order","setOrder","sortOrder","handleSorting","sorted","sort","a","b","toString","localeCompare","numeric","handleType","event","target","checked","console","log","handleType2","handleSortingChange","states2","jso","JSON","stringify","localStorage","setItem","map","label","sortable","cl"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst TableHead = ({ states, on, day, setDay, setOn, columns, tableData, setTableData }) => {\r\n\r\n  \r\n \r\n    \r\n  const [sortField, setSortField] = useState(states.accessor);\r\n  const [order, setOrder] = useState(states.sortOrder);\r\n\r\n\r\n    \r\n\r\n\r\n  const handleSorting = (sortField, sortOrder) => {\r\n    if (sortField) {\r\n      const sorted = [...tableData].sort((a, b) => {\r\n        if (a[sortField] === null) return 1;\r\n        if (b[sortField] === null) return -1;\r\n        if (a[sortField] === null && b[sortField] === null) return 0;\r\n        return (\r\n          a[sortField]?.toString().localeCompare(b[sortField]?.toString(), \"en\", {\r\n            numeric: true,\r\n          }) * (sortOrder === \"asc\" ? 1 : -1)\r\n        );\r\n      });\r\n\r\n      setTableData(sorted); \r\n     \r\n    }\r\n  };\r\n\r\n    const handleType = (event) => {\r\n      if (event.target.checked) {\r\n        setOn(false)\r\n        console.log('✅ Checkbox is checked');\r\n      } else {\r\n        setOn(true)\r\n       console.log('⛔️ Checkbox is NOT checked');\r\n      }\r\n      console.log(on)\r\n    }\r\n    const handleType2 = (event) => {\r\n      if (event.target.checked) {\r\n        setDay(false)\r\n        console.log('✅ Checkbox is checked');\r\n      } else {\r\n        setDay(true)\r\n       console.log('⛔️ Checkbox is NOT checked');\r\n      }\r\n      console.log(day)\r\n    }\r\n  const handleSortingChange = (accessor) => {\r\n    const sortOrder =\r\n      accessor === sortField && order === \"asc\" ? \"desc\" : \"asc\";\r\n    setSortField(accessor);\r\n    setOrder(sortOrder);\r\n    handleSorting(accessor, sortOrder);\r\n    \r\n    const states2 = {accessor, sortOrder}\r\n    const jso = JSON.stringify(states2);\r\n      localStorage.setItem(\"states2\", jso);\r\n  }\r\n \r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <td className=\"tdfilter\">\r\n      Overnight!\r\n            <input  \r\n              name=\"Overnight\"\r\n              defaultChecked=\"true\"\r\n              type=\"checkbox\"\r\n              onChange={handleType}\r\n          />  \r\n          &nbsp;&nbsp;Day use!&nbsp;\r\n           <input\r\n             defaultChecked=\"true\"\r\n              name=\"Day\"\r\n              onChange={handleType2}\r\n              type=\"checkbox\"\r\n            />\r\n        </td>\r\n        {columns.map(({ label, accessor, sortable }) => {\r\n          const cl = sortable\r\n            ? sortField && sortField === accessor && order === \"asc\"\r\n              ? \"up\"\r\n              : sortField && sortField === accessor && order === \"desc\"\r\n              ? \"down\"\r\n              : \"default\"\r\n              : \"\";\r\n          return (\r\n            <th\r\n              key={accessor}\r\n             \r\n              className={cl}\r\n            > \r\n             <button className=\"but\"  onClick={sortable ? () => handleSortingChange(accessor) : null}>\r\n                 {label}\r\n                 </button> \r\n            </th>\r\n          );\r\n        })}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default TableHead;"]},"metadata":{},"sourceType":"module"}