{"ast":null,"code":"\"use strict\";\n/*\r\n * Copyright 2010 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DetectorResult_1 = require(\"../common/DetectorResult\");\n/**\r\n * <p>Extends {@link DetectorResult} with more information specific to the Aztec format,\r\n * like the number of layers and whether it's compact.</p>\r\n *\r\n * @author Sean Owen\r\n */\n\n\nvar AztecDetectorResult =\n/** @class */\nfunction (_super) {\n  __extends(AztecDetectorResult, _super);\n\n  function AztecDetectorResult(bits, points, compact, nbDatablocks, nbLayers) {\n    var _this = _super.call(this, bits, points) || this;\n\n    _this.compact = compact;\n    _this.nbDatablocks = nbDatablocks;\n    _this.nbLayers = nbLayers;\n    return _this;\n  }\n\n  AztecDetectorResult.prototype.getNbLayers = function () {\n    return this.nbLayers;\n  };\n\n  AztecDetectorResult.prototype.getNbDatablocks = function () {\n    return this.nbDatablocks;\n  };\n\n  AztecDetectorResult.prototype.isCompact = function () {\n    return this.compact;\n  };\n\n  return AztecDetectorResult;\n}(DetectorResult_1.default);\n\nexports.default = AztecDetectorResult;","map":{"version":3,"sources":["../../../src/core/aztec/AztecDetectorResult.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIH,IAAA,gBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AAEA;;;;;AAKG;;;AACH,IAAA,mBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiD,EAAA,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA;;AAM7C,WAAA,mBAAA,CAAmB,IAAnB,EACI,MADJ,EAEI,OAFJ,EAGI,YAHJ,EAII,QAJJ,EAIoB;AAJpB,QAAA,KAAA,GAKI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,EAAY,MAAZ,KAAmB,IALvB;;AAMI,IAAA,KAAI,CAAC,OAAL,GAAe,OAAf;AACA,IAAA,KAAI,CAAC,YAAL,GAAoB,YAApB;AACA,IAAA,KAAI,CAAC,QAAL,GAAgB,QAAhB;;AACH;;AAEM,EAAA,mBAAA,CAAA,SAAA,CAAA,WAAA,GAAP,YAAA;AACI,WAAO,KAAK,QAAZ;AACH,GAFM;;AAIA,EAAA,mBAAA,CAAA,SAAA,CAAA,eAAA,GAAP,YAAA;AACI,WAAO,KAAK,YAAZ;AACH,GAFM;;AAIA,EAAA,mBAAA,CAAA,SAAA,CAAA,SAAA,GAAP,YAAA;AACI,WAAO,KAAK,OAAZ;AACH,GAFM;;AAGX,SAAA,mBAAA;AAAC,CA5BD,CAAiD,gBAAA,CAAA,OAAjD,CAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\n/*\r\n * Copyright 2010 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DetectorResult_1 = require(\"../common/DetectorResult\");\r\n/**\r\n * <p>Extends {@link DetectorResult} with more information specific to the Aztec format,\r\n * like the number of layers and whether it's compact.</p>\r\n *\r\n * @author Sean Owen\r\n */\r\nvar AztecDetectorResult = /** @class */ (function (_super) {\r\n    __extends(AztecDetectorResult, _super);\r\n    function AztecDetectorResult(bits, points, compact, nbDatablocks, nbLayers) {\r\n        var _this = _super.call(this, bits, points) || this;\r\n        _this.compact = compact;\r\n        _this.nbDatablocks = nbDatablocks;\r\n        _this.nbLayers = nbLayers;\r\n        return _this;\r\n    }\r\n    AztecDetectorResult.prototype.getNbLayers = function () {\r\n        return this.nbLayers;\r\n    };\r\n    AztecDetectorResult.prototype.getNbDatablocks = function () {\r\n        return this.nbDatablocks;\r\n    };\r\n    AztecDetectorResult.prototype.isCompact = function () {\r\n        return this.compact;\r\n    };\r\n    return AztecDetectorResult;\r\n}(DetectorResult_1.default));\r\nexports.default = AztecDetectorResult;\r\n//# sourceMappingURL=AztecDetectorResult.js.map"]},"metadata":{},"sourceType":"script"}